#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PemesananPesawat.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PemesananTiket")]
	public partial class OperationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMaskapai(Maskapai instance);
    partial void UpdateMaskapai(Maskapai instance);
    partial void DeleteMaskapai(Maskapai instance);
    partial void InsertTipe(Tipe instance);
    partial void UpdateTipe(Tipe instance);
    partial void DeleteTipe(Tipe instance);
    partial void InsertPemesanan(Pemesanan instance);
    partial void UpdatePemesanan(Pemesanan instance);
    partial void DeletePemesanan(Pemesanan instance);
    partial void InsertPesawat(Pesawat instance);
    partial void UpdatePesawat(Pesawat instance);
    partial void DeletePesawat(Pesawat instance);
    partial void InsertPilot(Pilot instance);
    partial void UpdatePilot(Pilot instance);
    partial void DeletePilot(Pilot instance);
    partial void InsertRute(Rute instance);
    partial void UpdateRute(Rute instance);
    partial void DeleteRute(Rute instance);
    #endregion
		
		public OperationDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PemesananTiketConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Maskapai> Maskapais
		{
			get
			{
				return this.GetTable<Maskapai>();
			}
		}
		
		public System.Data.Linq.Table<Tipe> Tipes
		{
			get
			{
				return this.GetTable<Tipe>();
			}
		}
		
		public System.Data.Linq.Table<Pemesanan> Pemesanans
		{
			get
			{
				return this.GetTable<Pemesanan>();
			}
		}
		
		public System.Data.Linq.Table<Pesawat> Pesawats
		{
			get
			{
				return this.GetTable<Pesawat>();
			}
		}
		
		public System.Data.Linq.Table<Pilot> Pilots
		{
			get
			{
				return this.GetTable<Pilot>();
			}
		}
		
		public System.Data.Linq.Table<Rute> Rutes
		{
			get
			{
				return this.GetTable<Rute>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maskapai")]
	public partial class Maskapai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NamaMaskapai;
		
		private EntitySet<Pemesanan> _Pemesanans;
		
		private EntitySet<Pesawat> _Pesawats;
		
		private EntitySet<Rute> _Rutes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNamaMaskapaiChanging(string value);
    partial void OnNamaMaskapaiChanged();
    #endregion
		
		public Maskapai()
		{
			this._Pemesanans = new EntitySet<Pemesanan>(new Action<Pemesanan>(this.attach_Pemesanans), new Action<Pemesanan>(this.detach_Pemesanans));
			this._Pesawats = new EntitySet<Pesawat>(new Action<Pesawat>(this.attach_Pesawats), new Action<Pesawat>(this.detach_Pesawats));
			this._Rutes = new EntitySet<Rute>(new Action<Rute>(this.attach_Rutes), new Action<Rute>(this.detach_Rutes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamaMaskapai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NamaMaskapai
		{
			get
			{
				return this._NamaMaskapai;
			}
			set
			{
				if ((this._NamaMaskapai != value))
				{
					this.OnNamaMaskapaiChanging(value);
					this.SendPropertyChanging();
					this._NamaMaskapai = value;
					this.SendPropertyChanged("NamaMaskapai");
					this.OnNamaMaskapaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maskapai_Pemesanan", Storage="_Pemesanans", ThisKey="Id", OtherKey="MaskapaiId")]
		public EntitySet<Pemesanan> Pemesanans
		{
			get
			{
				return this._Pemesanans;
			}
			set
			{
				this._Pemesanans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maskapai_Pesawat", Storage="_Pesawats", ThisKey="Id", OtherKey="MaskapaiId")]
		public EntitySet<Pesawat> Pesawats
		{
			get
			{
				return this._Pesawats;
			}
			set
			{
				this._Pesawats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maskapai_Rute", Storage="_Rutes", ThisKey="Id", OtherKey="MaskapaiId")]
		public EntitySet<Rute> Rutes
		{
			get
			{
				return this._Rutes;
			}
			set
			{
				this._Rutes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pemesanans(Pemesanan entity)
		{
			this.SendPropertyChanging();
			entity.Maskapai = this;
		}
		
		private void detach_Pemesanans(Pemesanan entity)
		{
			this.SendPropertyChanging();
			entity.Maskapai = null;
		}
		
		private void attach_Pesawats(Pesawat entity)
		{
			this.SendPropertyChanging();
			entity.Maskapai = this;
		}
		
		private void detach_Pesawats(Pesawat entity)
		{
			this.SendPropertyChanging();
			entity.Maskapai = null;
		}
		
		private void attach_Rutes(Rute entity)
		{
			this.SendPropertyChanging();
			entity.Maskapai = this;
		}
		
		private void detach_Rutes(Rute entity)
		{
			this.SendPropertyChanging();
			entity.Maskapai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipe")]
	public partial class Tipe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TipePesawat;
		
		private EntitySet<Pesawat> _Pesawats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTipePesawatChanging(string value);
    partial void OnTipePesawatChanged();
    #endregion
		
		public Tipe()
		{
			this._Pesawats = new EntitySet<Pesawat>(new Action<Pesawat>(this.attach_Pesawats), new Action<Pesawat>(this.detach_Pesawats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipePesawat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TipePesawat
		{
			get
			{
				return this._TipePesawat;
			}
			set
			{
				if ((this._TipePesawat != value))
				{
					this.OnTipePesawatChanging(value);
					this.SendPropertyChanging();
					this._TipePesawat = value;
					this.SendPropertyChanged("TipePesawat");
					this.OnTipePesawatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipe_Pesawat", Storage="_Pesawats", ThisKey="Id", OtherKey="TipeId")]
		public EntitySet<Pesawat> Pesawats
		{
			get
			{
				return this._Pesawats;
			}
			set
			{
				this._Pesawats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pesawats(Pesawat entity)
		{
			this.SendPropertyChanging();
			entity.Tipe = this;
		}
		
		private void detach_Pesawats(Pesawat entity)
		{
			this.SendPropertyChanging();
			entity.Tipe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pemesanan")]
	public partial class Pemesanan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NamaPemesan;
		
		private string _TanggalPemesanan;
		
		private int _MaskapaiId;
		
		private int _RuteId;
		
		private EntityRef<Maskapai> _Maskapai;
		
		private EntityRef<Rute> _Rute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNamaPemesanChanging(string value);
    partial void OnNamaPemesanChanged();
    partial void OnTanggalPemesananChanging(string value);
    partial void OnTanggalPemesananChanged();
    partial void OnMaskapaiIdChanging(int value);
    partial void OnMaskapaiIdChanged();
    partial void OnRuteIdChanging(int value);
    partial void OnRuteIdChanged();
    #endregion
		
		public Pemesanan()
		{
			this._Maskapai = default(EntityRef<Maskapai>);
			this._Rute = default(EntityRef<Rute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamaPemesan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NamaPemesan
		{
			get
			{
				return this._NamaPemesan;
			}
			set
			{
				if ((this._NamaPemesan != value))
				{
					this.OnNamaPemesanChanging(value);
					this.SendPropertyChanging();
					this._NamaPemesan = value;
					this.SendPropertyChanged("NamaPemesan");
					this.OnNamaPemesanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalPemesanan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TanggalPemesanan
		{
			get
			{
				return this._TanggalPemesanan;
			}
			set
			{
				if ((this._TanggalPemesanan != value))
				{
					this.OnTanggalPemesananChanging(value);
					this.SendPropertyChanging();
					this._TanggalPemesanan = value;
					this.SendPropertyChanged("TanggalPemesanan");
					this.OnTanggalPemesananChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskapaiId", DbType="Int NOT NULL")]
		public int MaskapaiId
		{
			get
			{
				return this._MaskapaiId;
			}
			set
			{
				if ((this._MaskapaiId != value))
				{
					if (this._Maskapai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaskapaiIdChanging(value);
					this.SendPropertyChanging();
					this._MaskapaiId = value;
					this.SendPropertyChanged("MaskapaiId");
					this.OnMaskapaiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuteId", DbType="Int NOT NULL")]
		public int RuteId
		{
			get
			{
				return this._RuteId;
			}
			set
			{
				if ((this._RuteId != value))
				{
					if (this._Rute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRuteIdChanging(value);
					this.SendPropertyChanging();
					this._RuteId = value;
					this.SendPropertyChanged("RuteId");
					this.OnRuteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maskapai_Pemesanan", Storage="_Maskapai", ThisKey="MaskapaiId", OtherKey="Id", IsForeignKey=true)]
		public Maskapai Maskapai
		{
			get
			{
				return this._Maskapai.Entity;
			}
			set
			{
				Maskapai previousValue = this._Maskapai.Entity;
				if (((previousValue != value) 
							|| (this._Maskapai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maskapai.Entity = null;
						previousValue.Pemesanans.Remove(this);
					}
					this._Maskapai.Entity = value;
					if ((value != null))
					{
						value.Pemesanans.Add(this);
						this._MaskapaiId = value.Id;
					}
					else
					{
						this._MaskapaiId = default(int);
					}
					this.SendPropertyChanged("Maskapai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rute_Pemesanan", Storage="_Rute", ThisKey="RuteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Rute Rute
		{
			get
			{
				return this._Rute.Entity;
			}
			set
			{
				Rute previousValue = this._Rute.Entity;
				if (((previousValue != value) 
							|| (this._Rute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rute.Entity = null;
						previousValue.Pemesanans.Remove(this);
					}
					this._Rute.Entity = value;
					if ((value != null))
					{
						value.Pemesanans.Add(this);
						this._RuteId = value.Id;
					}
					else
					{
						this._RuteId = default(int);
					}
					this.SendPropertyChanged("Rute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pesawat")]
	public partial class Pesawat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MaskapaiId;
		
		private string _Jadwal;
		
		private int _TipeId;
		
		private int _PilotId;
		
		private EntityRef<Maskapai> _Maskapai;
		
		private EntityRef<Tipe> _Tipe;
		
		private EntityRef<Pilot> _Pilot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaskapaiIdChanging(int value);
    partial void OnMaskapaiIdChanged();
    partial void OnJadwalChanging(string value);
    partial void OnJadwalChanged();
    partial void OnTipeIdChanging(int value);
    partial void OnTipeIdChanged();
    partial void OnPilotIdChanging(int value);
    partial void OnPilotIdChanged();
    #endregion
		
		public Pesawat()
		{
			this._Maskapai = default(EntityRef<Maskapai>);
			this._Tipe = default(EntityRef<Tipe>);
			this._Pilot = default(EntityRef<Pilot>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskapaiId", DbType="Int NOT NULL")]
		public int MaskapaiId
		{
			get
			{
				return this._MaskapaiId;
			}
			set
			{
				if ((this._MaskapaiId != value))
				{
					if (this._Maskapai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaskapaiIdChanging(value);
					this.SendPropertyChanging();
					this._MaskapaiId = value;
					this.SendPropertyChanged("MaskapaiId");
					this.OnMaskapaiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jadwal", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Jadwal
		{
			get
			{
				return this._Jadwal;
			}
			set
			{
				if ((this._Jadwal != value))
				{
					this.OnJadwalChanging(value);
					this.SendPropertyChanging();
					this._Jadwal = value;
					this.SendPropertyChanged("Jadwal");
					this.OnJadwalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipeId", DbType="Int NOT NULL")]
		public int TipeId
		{
			get
			{
				return this._TipeId;
			}
			set
			{
				if ((this._TipeId != value))
				{
					if (this._Tipe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipeIdChanging(value);
					this.SendPropertyChanging();
					this._TipeId = value;
					this.SendPropertyChanged("TipeId");
					this.OnTipeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PilotId", DbType="Int NOT NULL")]
		public int PilotId
		{
			get
			{
				return this._PilotId;
			}
			set
			{
				if ((this._PilotId != value))
				{
					if (this._Pilot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPilotIdChanging(value);
					this.SendPropertyChanging();
					this._PilotId = value;
					this.SendPropertyChanged("PilotId");
					this.OnPilotIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maskapai_Pesawat", Storage="_Maskapai", ThisKey="MaskapaiId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Maskapai Maskapai
		{
			get
			{
				return this._Maskapai.Entity;
			}
			set
			{
				Maskapai previousValue = this._Maskapai.Entity;
				if (((previousValue != value) 
							|| (this._Maskapai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maskapai.Entity = null;
						previousValue.Pesawats.Remove(this);
					}
					this._Maskapai.Entity = value;
					if ((value != null))
					{
						value.Pesawats.Add(this);
						this._MaskapaiId = value.Id;
					}
					else
					{
						this._MaskapaiId = default(int);
					}
					this.SendPropertyChanged("Maskapai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipe_Pesawat", Storage="_Tipe", ThisKey="TipeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tipe Tipe
		{
			get
			{
				return this._Tipe.Entity;
			}
			set
			{
				Tipe previousValue = this._Tipe.Entity;
				if (((previousValue != value) 
							|| (this._Tipe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipe.Entity = null;
						previousValue.Pesawats.Remove(this);
					}
					this._Tipe.Entity = value;
					if ((value != null))
					{
						value.Pesawats.Add(this);
						this._TipeId = value.Id;
					}
					else
					{
						this._TipeId = default(int);
					}
					this.SendPropertyChanged("Tipe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pilot_Pesawat", Storage="_Pilot", ThisKey="PilotId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Pilot Pilot
		{
			get
			{
				return this._Pilot.Entity;
			}
			set
			{
				Pilot previousValue = this._Pilot.Entity;
				if (((previousValue != value) 
							|| (this._Pilot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pilot.Entity = null;
						previousValue.Pesawats.Remove(this);
					}
					this._Pilot.Entity = value;
					if ((value != null))
					{
						value.Pesawats.Add(this);
						this._PilotId = value.Id;
					}
					else
					{
						this._PilotId = default(int);
					}
					this.SendPropertyChanged("Pilot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pilot")]
	public partial class Pilot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NamaPilot;
		
		private EntitySet<Pesawat> _Pesawats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNamaPilotChanging(string value);
    partial void OnNamaPilotChanged();
    #endregion
		
		public Pilot()
		{
			this._Pesawats = new EntitySet<Pesawat>(new Action<Pesawat>(this.attach_Pesawats), new Action<Pesawat>(this.detach_Pesawats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamaPilot", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NamaPilot
		{
			get
			{
				return this._NamaPilot;
			}
			set
			{
				if ((this._NamaPilot != value))
				{
					this.OnNamaPilotChanging(value);
					this.SendPropertyChanging();
					this._NamaPilot = value;
					this.SendPropertyChanged("NamaPilot");
					this.OnNamaPilotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pilot_Pesawat", Storage="_Pesawats", ThisKey="Id", OtherKey="PilotId")]
		public EntitySet<Pesawat> Pesawats
		{
			get
			{
				return this._Pesawats;
			}
			set
			{
				this._Pesawats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pesawats(Pesawat entity)
		{
			this.SendPropertyChanging();
			entity.Pilot = this;
		}
		
		private void detach_Pesawats(Pesawat entity)
		{
			this.SendPropertyChanging();
			entity.Pilot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rute")]
	public partial class Rute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MaskapaiId;
		
		private string _Keberangkatan;
		
		private string _Kedatangan;
		
		private string _NomorPenerbangan;
		
		private EntitySet<Pemesanan> _Pemesanans;
		
		private EntityRef<Maskapai> _Maskapai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaskapaiIdChanging(int value);
    partial void OnMaskapaiIdChanged();
    partial void OnKeberangkatanChanging(string value);
    partial void OnKeberangkatanChanged();
    partial void OnKedatanganChanging(string value);
    partial void OnKedatanganChanged();
    partial void OnNomorPenerbanganChanging(string value);
    partial void OnNomorPenerbanganChanged();
    #endregion
		
		public Rute()
		{
			this._Pemesanans = new EntitySet<Pemesanan>(new Action<Pemesanan>(this.attach_Pemesanans), new Action<Pemesanan>(this.detach_Pemesanans));
			this._Maskapai = default(EntityRef<Maskapai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskapaiId", DbType="Int NOT NULL")]
		public int MaskapaiId
		{
			get
			{
				return this._MaskapaiId;
			}
			set
			{
				if ((this._MaskapaiId != value))
				{
					if (this._Maskapai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaskapaiIdChanging(value);
					this.SendPropertyChanging();
					this._MaskapaiId = value;
					this.SendPropertyChanged("MaskapaiId");
					this.OnMaskapaiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keberangkatan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Keberangkatan
		{
			get
			{
				return this._Keberangkatan;
			}
			set
			{
				if ((this._Keberangkatan != value))
				{
					this.OnKeberangkatanChanging(value);
					this.SendPropertyChanging();
					this._Keberangkatan = value;
					this.SendPropertyChanged("Keberangkatan");
					this.OnKeberangkatanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kedatangan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Kedatangan
		{
			get
			{
				return this._Kedatangan;
			}
			set
			{
				if ((this._Kedatangan != value))
				{
					this.OnKedatanganChanging(value);
					this.SendPropertyChanging();
					this._Kedatangan = value;
					this.SendPropertyChanged("Kedatangan");
					this.OnKedatanganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomorPenerbangan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NomorPenerbangan
		{
			get
			{
				return this._NomorPenerbangan;
			}
			set
			{
				if ((this._NomorPenerbangan != value))
				{
					this.OnNomorPenerbanganChanging(value);
					this.SendPropertyChanging();
					this._NomorPenerbangan = value;
					this.SendPropertyChanged("NomorPenerbangan");
					this.OnNomorPenerbanganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rute_Pemesanan", Storage="_Pemesanans", ThisKey="Id", OtherKey="RuteId")]
		public EntitySet<Pemesanan> Pemesanans
		{
			get
			{
				return this._Pemesanans;
			}
			set
			{
				this._Pemesanans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maskapai_Rute", Storage="_Maskapai", ThisKey="MaskapaiId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Maskapai Maskapai
		{
			get
			{
				return this._Maskapai.Entity;
			}
			set
			{
				Maskapai previousValue = this._Maskapai.Entity;
				if (((previousValue != value) 
							|| (this._Maskapai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maskapai.Entity = null;
						previousValue.Rutes.Remove(this);
					}
					this._Maskapai.Entity = value;
					if ((value != null))
					{
						value.Rutes.Add(this);
						this._MaskapaiId = value.Id;
					}
					else
					{
						this._MaskapaiId = default(int);
					}
					this.SendPropertyChanged("Maskapai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pemesanans(Pemesanan entity)
		{
			this.SendPropertyChanging();
			entity.Rute = this;
		}
		
		private void detach_Pemesanans(Pemesanan entity)
		{
			this.SendPropertyChanging();
			entity.Rute = null;
		}
	}
}
#pragma warning restore 1591
